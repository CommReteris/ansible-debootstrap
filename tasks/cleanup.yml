---

- name: Ensure efivars is unmounted
  ansible.posix.mount:
    path: "efivarfs"
    state: unmounted

- name: Ensure pseudo filesystems are unmounted
  ansible.posix.mount:
    path: "{{ dbstrp_mountpoint }}/{{ item }}"
    state: unmounted
  with_items: "{{ pseudo_fs|reverse }}"

- name: Ensure /boot/efi is not mounted
  ansible.posix.mount:
    path: "{{ item }}"
    state: unmounted
  loop:
    - "{{ dbstrp_mountpoint }}/boot/efi"
    - "/boot/efi"

- name: Check for mounted targets
  command: mount
  register: _existing_mounts

- name: Unmount any zfs mounts
  command: zfs umount -f -a
  when:
    - "dbstrp_mountpoint in _existing_mounts.stdout"
    - "'type zfs' in _existing_mounts.stdout"

- name: Check again for mounted targets
  command: mount
  register: _existing_mounts

- name: Unmount anything residual in target directory
  command: umount -Rfl {{ dbstrp_mountpoint }}
  when: "dbstrp_mountpoint in _existing_mounts.stdout"

- name: Unmount any residual zfs mounts
  command: zfs umount -f -a
  when:
    - "dbstrp_mountpoint in _existing_mounts.stdout"
    - "'type zfs' in _existing_mounts.stdout"

- name: Export ZFS pools
  command: zpool export -f -a
  loop: '{{ ansible_zfs_pools }}'
  loop_control:
    label: "{{ item.name }}"

- name: Gather luks targets
  command: dmsetup info -c -o Name --noheadings
  register: _targets

- name: Close any open luks tagets
  command: "cryptsetup luksClose /dev/mapper/{{ item }}"
  when: "not item == 'No devices found'"
  loop: "{{ _targets.stdout_lines }}"

- name: Stop any raid devices
  command: "mdadm --stop --scan"
