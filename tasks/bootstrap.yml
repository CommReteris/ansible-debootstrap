---
# The reason to use tmpfs here is that dpkg is awful slow, especially when installing to
# slower devices (think thumb drive). It can be configured by the user, however.

- block:
  - name: create another tmpdir
    command: mktemp -d
    register: _mktemp

  - name: set target (tmpfs)
    set_fact:
      _bootstrap_target: "{{ _mktemp.stdout }}"
      _mktemp: None

  - name: mount tmpfs
    command: "mount -t tmpfs -o size=2G none {{ _bootstrap_target }} warn=no"

  when: use_tmpfs

- name: set target
  set_fact:
    _bootstrap_target: "{{ _tgt_root }}"
  when: not use_tmpfs

- block:
  - name: run bootstrap
    command: >
      eatmydata debootstrap {% if dbstrp_variant is defined %}--variant={{ dbstrp_variant }}{% endif %}
      {{ release }} {{ _bootstrap_target }} {{ use_mirror|default(mirrors[release]) }}

  - name: bind mount pseudo filesystems
    shell: "mkdir {{ _bootstrap_target }}/{{ item }}; mount --bind /{{ item }} {{ _bootstrap_target }}/{{ item }} warn=no"
    register: _pseudomount
    with_items: "{{ pseudo_fs }}"

  - name: Link mtab
    file:
      src: "/proc/mounts"
      dest: "{{ _bootstrap_target }}/etc/mtab"
      state: link

  - name: build list of packages to install
    set_fact:
      _install: "{{ install_packages + required_packages['all'] + required_packages[release] }}"

  rescue:
  - name: cleanup
    include_tasks: cleanup.yml

  - name: wipe
    include_tasks: wipe.yml

- block:
  # add more sources for apt
  - name: update sources.list
    template:
      src: "sources_ubuntu.list"
      dest: "{{ _bootstrap_target }}/etc/apt/sources.list"
      mode: "0644"
      owner: root
      group: root
    when: release in ["xenial", "artful", "bionic", "focal", "hirsuite"]

  - name: Update sources.list
    template:
      src: "sources_debian.list"
      dest: "{{ _bootstrap_target }}/etc/apt/sources.list"
      mode: "0644"
      owner: root
      group: root
    when: release in ["stretch", "buster", "sid", "bullseye"]

  - name: Update sources
    command: "chroot {{ _bootstrap_target }} apt update"

  - name: apt full-upgrade
    command: "chroot {{ _bootstrap_target }} apt full-upgrade -y"

  # cut down on fsync
  - name: Install eatmydata
    command: "chroot {{ _bootstrap_target }} apt-get -y install eatmydata"

  - name: Allow ppa use
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get -y install software-properties-common"
    when: >-
      install_ppa|default([])|length > 0 or
      (
        ansible_distribution == "Ubuntu"
        and ansible_distribution_release in ["bionic", "disco"]
        and zfs_pool is defined
      and dbstrp_zfs_backport|default(False))

  - name: Install ZFS ppa for 0.8
    command: >-
      chroot {{ _bootstrap_target }} eatmydata
      add-apt-repository -yu ppa:jonathonf/zfs
    when: >-
      ansible_distribution == "Ubuntu"
      and ansible_distribution_release in ["bionic", "disco"]
      and zfs_pool is defined
      and dbstrp_zfs_backport|default(False)

  # pool can't be imported when the hostid changes
  - name: copy hostid to chroot
    command: >-
      cp /etc/hostid {{ _bootstrap_target }}/etc/
    when: zfs_pool is defined

  - name: register hostid
    command: cat /etc/hostid
    register: _hostid

  # A bit ineffective, since we'll be upgrading the cache every time.
  - name: Enable ppa
    shell: "chroot  {{ _bootstrap_target }} eatmydata add-apt-repository -yu {{ item }}"
    with_items: "{{ install_ppa|default([]) }}"
    when: install_ppa is defined and install_ppa|length > 0

  - name: install packages requiring no_recommends
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get -y install --no-install-recommends \
      {{ no_recommends.all + no_recommends['release'] | join(' ') }}"

  - name: install packages
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get -y  install {{ _install|join(' ') }}"

  - name: clean up packages
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get clean"

  - name: Configure locales 1
    command: "chroot {{ _bootstrap_target }} locale-gen en_US.UTF-8 {{ locale }}"

  - name: Configure locales 2
    command: "chroot {{ _bootstrap_target }} echo 'LANG={{ locale }}' > /etc/default/locale"

  - name: Configure timezone 1
    command: "ln -fs /usr/share/zoneinfo/{{ timezone }} /etc/localtime"

  - name: Configure timezone 2
    command: "dpkg-reconfigure -f noninteractive tzdata"

  environment: "{{ _apt_env }}"

- block:
  - name: umount pseudo filesystems
    command: umount {{ _bootstrap_target }}/{{ item }}
    with_items: "{{ pseudo_fs|reverse|list }}"

  - name: copy data from temp
    shell: cp -a {{ _bootstrap_target }}/* {{ _tgt_root }}/

  - name: bind mount pseudo filesystems
    shell: mkdir {{ _tgt_root }}/{{ item }}; mount --bind /{{ item }} {{ _tgt_root }}/{{ item }}
    register: _pseudomount
    with_items: "{{ pseudo_fs }}"

  - name: umount tmpfs
    command: "umount {{ _bootstrap_target }}"

  - name: remove tmpfs
    file:
      state: absent
      dest: "{{ _bootstrap_target }}"

  when: use_tmpfs
