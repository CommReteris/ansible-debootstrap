---

- name: Get system info & set vars
  include_tasks: get_info.yml

- name: Cursory variable check
  include_tasks: sanity.yml

- name: Run initial APT tasks
  include_tasks: initial_apt.yml

- block:
    - name: Cleanup any previos deployment
      include_tasks: cleanup.yml

    - name: wipe devices
      include_tasks: wipe.yml
      when: wipe|default('') == "ABSOLUTELY"

    - name: create mountpoint
      file:
        state: directory
        path: "{{ dbstrp_mountpoint }}"

    - name: create debootstrap user
      include_tasks: user.yml
      vars:
        _tgt_user: no

    - name: chroot user via ssh
      blockinfile:
        path: "/etc/ssh/sshd_config"
        state: present
        block: >
          Match user {{ dbstrp_user['name'] }}
              ChrootDirectory {{ dbstrp_mountpoint }}
              AuthorizedKeysFile {{ dbstrp_mountpoint }}/home/debootstrap/.ssh/authorized_keys
      register: _ssh_config

    - name: restart sshd
      service:
        name: ssh
        state: restarted
      when: _ssh_config.changed

    - name: set mountpoint
      set_fact:
        _tgt_root: "{{ dbstrp_mountpoint }}"
        _mktemp: None

    - name: Partition Devices
      include_tasks: partitions.yml

    - name: Create filesystems
      include_tasks: fs.yml

    - name: Create and mount ZFS pools
      include_tasks: zfs.yml
      when: zfs_pool is defined and zfs_fs is defined

    - name: mount filesystems
      include_tasks: mount.yml

    - name: Bootstrap the new install
      include_tasks: bootstrap.yml

    - name: Configure the new install
      include_tasks: configure.yml

    - name: Create debootstrap user on target
      include_tasks: user.yml
      vars:
        _tgt_user: yes

    - name: Mark as bootstrapped
      copy:
        dest: "/root/.bootstrap_complete"
        content: ""
        owner: root
        group: root
        mode: 0600

    - name: Register bootstrapped fact
      set_fact:
        bootstrapped: yes

  when: not bootstrapped or wipe|default('') == "ABSOLUTELY"
